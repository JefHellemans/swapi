!function(){Person=Backbone.Model.extend({defaults:function(){return{name:"",height:"",mass:"",hair_color:"",skin_color:"",eye_color:"",birth_year:"",gender:"",homeworld:"",films:[],species:[],vehicles:[],starships:[],created:"",edited:"",url:""}}}),People=Backbone.Collection.extend({model:Person,localStorage:new Store("people-backbone")}),Film=Backbone.Model.extend({defaults:function(){return{title:"",episode_id:"",opening_crawl:"",director:"",producer:"",release_date:"",characters:[],planets:[],starships:[],vehicles:[],species:[],created:"",edited:"",url:""}}}),Films=Backbone.Collection.extend({model:Film,localStorage:new Store("films-backbone")}),Starship=Backbone.Model.extend({defaults:function(){return{name:"",model:"",manufacturer:"",cost_in_credits:"",length:"",max_atmosphering_speed:"",crew:"",passengers:"",cargo_capacity:"",consumables:"",hyperdrive_rating:"",MGLT:"",starship_class:"",pilots:[],films:[],created:"",edited:"",url:""}}}),Starships=Backbone.Collection.extend({model:Starship,localStorage:new Store("starships-backbone")}),Vehicle=Backbone.Model.extend({defaults:function(){return{name:"",model:"",manufacturer:"",cost_in_credits:"",length:"",max_atmosphering_speed:"",crew:"",passengers:"",cargo_capacity:"",consumables:"",vehicle_class:"",pilots:[],films:[],created:"",edited:"",url:""}}}),Vehicles=Backbone.Collection.extend({model:Vehicle,localStorage:new Store("vehicles-backbone")}),Race=Backbone.Model.extend({defaults:function(){return{name:"",classification:"",designation:"",average_height:"",skin_colors:"",hair_colors:"",eye_colors:"",average_lifespan:"",homeworld:"",language:"",people:[],films:[],created:"",edited:"",url:""}}}),Species=Backbone.Collection.extend({model:Race,localStorage:new Store("species-backbone")}),Planet=Backbone.Model.extend({defaults:function(){return{name:"",rotation_period:"",orbital_period:"",diameter:"",climate:"",gravity:"",terrain:"",surface_water:"",population:"",residents:[],films:[],created:"",edited:"",url:""}}}),Planets=Backbone.Collection.extend({model:Planet,localStorage:new Store("planets-backbone")});var e=new People,t=new Films,s=new Starships,n=new Vehicles,l=new Species,a=new Planets,i=function(e,t,s,n,l){o(e,t,s.results,function(e,t){2>=n&&l(null,t)});for(var a=2;n+1>=a;a++)r(t,a,function(s,a,i){o(e,t,a.results,function(e,t){i>=n&&l(null,t)})})},r=function(e,t,s){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4==n.readyState&&200==n.status){var e=JSON.parse(n.responseText);s(null,e,t)}},n.open("GET","http://swapi.co/api/"+e+"/?page="+t+"&format=json",!0),n.send()},o=function(e,t,s,n){for(var l=s.length,a=0;l>a;a++)c(t,a,s[a],function(t,s,a){t?n(!0,null):(e.add(s),++a==l&&n(null,e))})},c=function(e,t,s,n){switch(e){case"people":p(s,function(e,s){n(null,s,t)});break;case"films":u(s,function(e,s){n(null,s,t)});break;case"starships":h(s,function(e,s){n(null,s,t)});break;case"vehicles":d(s,function(e,s){n(null,s,t)});break;case"species":m(s,function(e,s){n(null,s,t)});break;case"planets":f(s,function(e,s){n(null,s,t)});break;default:n(!0,null,t)}},p=function(e,t){if(e.name){var s=new Person;s.set("name",e.name),s.set("height",e.height),s.set("mass",e.mass),s.set("hair_color",e.hair_color),s.set("skin_color",e.skin_color),s.set("eye_color",e.eye_color),s.set("birth_year",e.birth_year),s.set("gender",e.gender),s.set("homeworld",e.homeworld),s.set("films",e.films),s.set("species",e.species),s.set("vehicles",e.vehicles),s.set("starships",e.starships),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},u=function(e,t){if(e.title){var s=new Film;s.set("title",e.title),s.set("episode_id",e.episode_id),s.set("opening_crawl",e.opening_crawl),s.set("director",e.director),s.set("producer",e.producer),s.set("release_date",e.release_date),s.set("characters",e.characters),s.set("planets",e.planets),s.set("starships",e.starships),s.set("vehicles",e.vehicles),s.set("species",e.species),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},h=function(e,t){if(e.name){var s=new Starship;s.set("name",e.name),s.set("model",e.model),s.set("manufacturer",e.manufacturer),s.set("cost_in_credits",e.cost_in_credits),s.set("length",e.length),s.set("max_atmosphering_speed",e.max_atmosphering_speed),s.set("crew",e.crew),s.set("passengers",e.passengers),s.set("cargo_capacity",e.cargo_capacity),s.set("consumables",e.consumables),s.set("hyperdrive_rating",e.hyperdrive_rating),s.set("MGLT",e.MGLT),s.set("starship_class",e.starship_class),s.set("pilots",e.pilots),s.set("films",e.films),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},d=function(e,t){if(e.name){var s=new Vehicle;s.set("name",e.name),s.set("model",e.model),s.set("manufacturer",e.manufacturer),s.set("cost_in_credits",e.cost_in_credits),s.set("length",e.length),s.set("max_atmosphering_speed",e.max_atmosphering_speed),s.set("crew",e.crew),s.set("passengers",e.passengers),s.set("cargo_capacity",e.cargo_capacity),s.set("consumables",e.consumables),s.set("vehicle_class",e.vehicle_class),s.set("pilots",e.pilots),s.set("films",e.films),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},m=function(e,t){if(e.name){var s=new Race;s.set("name",e.name),s.set("classification",e.classification),s.set("designation",e.designation),s.set("average_height",e.average_height),s.set("skin_colors",e.skin_colors),s.set("hair_colors",e.hair_colors),s.set("eye_colors",e.eye_colors),s.set("average_lifespan",e.average_lifespan),s.set("homeworld",e.homeworld),s.set("language",e.language),s.set("people",e.people),s.set("films",e.films),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},f=function(e,t){if(e.name){var s=new Planet;s.set("name",e.name),s.set("rotation_period",e.rotation_period),s.set("orbital_period",e.orbital_period),s.set("diameter",e.diameter),s.set("climate",e.climate),s.set("gravity",e.gravity),s.set("terrain",e.terrain),s.set("surface_water",e.surface_water),s.set("population",e.population),s.set("residents",e.residents),s.set("films",e.films),s.set("created",e.created),s.set("edited",e.edited),s.set("url",e.url),t(null,s)}else t(!0,null)},g=Backbone.View.extend({tagName:"section",template:_.template("<%- name %>"),events:{},makeList:function(e,t,s){var n=new w;n.showList(e,t,s)},render:function(){return this.$el.html(this.template(this.model.toJSON())),this}}),w=Backbone.View.extend({tagName:"li",template:_.template("<a href='#'><%- name %></a>"),group:"",events:{"click a":"showDetails"},showList:function(e,t,s){if(e.empty(),t instanceof Backbone.Model){var n=new w({model:t});n.group=s,"films"==s&&(n.template=_.template("<a href='#'><%- title %></a>"));var l=n.render().el;e.append(l),$(l).hide().slideDown(200)}else t instanceof Backbone.Collection&&t.forEach(function(t,n){if(5>n){var l=new w({model:t});l.group=s,"films"==s&&(l.template=_.template("<a href='#'><%- title %></a>"));var a=l.render().el;e.append(a),$(a).hide().slideDown(200)}})},showDetails:function(e){e.preventDefault(),document.getElementById("search").value="",v.search();var t=$("#result");t.empty();var s=new g({model:this.model});switch(this.group){case"people":s.template=_.template($("#person-template").html()),t.append(s.render().el),s.makeList($("#result .homeworld"),this.model.get("homeworld"),"planets"),s.makeList($("#result .films"),this.model.get("films"),"films"),s.makeList($("#result .species"),this.model.get("species"),"species"),s.makeList($("#result .vehicles"),this.model.get("vehicles"),"vehicles"),s.makeList($("#result .starships"),this.model.get("starships"),"starships");break;case"films":s.template=_.template($("#film-template").html()),t.append(s.render().el),s.makeList($("#result .characters"),this.model.get("characters"),"people"),s.makeList($("#result .planets"),this.model.get("planets"),"planets"),s.makeList($("#result .starships"),this.model.get("starships"),"starships"),s.makeList($("#result .vehicles"),this.model.get("vehicles"),"vehicles"),s.makeList($("#result .species"),this.model.get("species"),"species");break;case"starships":s.template=_.template($("#starship-template").html()),t.append(s.render().el),s.makeList($("#result .pilots"),this.model.get("pilots"),"people"),s.makeList($("#result .films"),this.model.get("films"),"films");break;case"vehicles":s.template=_.template($("#vehicle-template").html()),t.append(s.render().el),s.makeList($("#result .pilots"),this.model.get("pilots"),"people"),s.makeList($("#result .films"),this.model.get("films"),"films");break;case"species":s.template=_.template($("#race-template").html()),t.append(s.render().el),s.makeList($("#result .people"),this.model.get("people"),"people"),s.makeList($("#result .films"),this.model.get("films"),"films");break;case"planets":s.template=_.template($("#planet-template").html()),t.append(s.render().el),s.makeList($("#result .residents"),this.model.get("residents"),"people"),s.makeList($("#result .films"),this.model.get("films"),"films")}},render:function(){return this.$el.html(this.template(this.model.toJSON())),this}}),k=Backbone.View.extend({el:$("#app"),template:_.template($("#loading-template").html()),status:"",events:{"keypress #search":"preventSend","keyup #search":"search",'click [type="checkbox"]':"search"},preventSend:function(e){13===e.which&&e.preventDefault()},search:function(){var e=document.getElementById("search").value;b(e.length>=1?e:"thisstringshouldnevershowupandthereforeclearthelists")},initialize:function(){this.status="Bribing stormtroopers...",this.render()},showSearch:function(){this.status="",this.template=_.template($("#search-template").html()),this.render()},render:function(){""!=this.status?this.$el.html(this.template({status:this.status})):(this.$el.html(this.template()),$("#options h2").slideUp(0))}}),v=new k,b=function(i){$("input[type=checkbox]").each(function(){var r,o,c=$(this).val();switch(c){case"people":r=new People,o=e;break;case"films":r=new Films,o=t;break;case"starships":r=new Starships,o=s;break;case"vehicles":r=new Vehicles,o=n;break;case"species":r=new Species,o=l;break;case"planets":r=new Planets,o=a}if($(this).is(":checked"))y(r,o,c,i,function(e,t){0===t.length?$("h2."+c).slideUp(200):$("h2."+c).slideDown(200);var s=new w;s.showList($("#"+c),t,c)});else{$("h2."+c).slideUp(200);var p=new w;p.showList($("#"+c),r,c)}})},y=function(e,t,s,n,l){t.forEach(function(a,i){S(s,a,n,function(s,n){n&&e.add(a),++i===t.length&&l(null,e)})})},S=function(e,t,s,n){var l;l="films"===e?t.get("title").toLowerCase():t.get("name").toLowerCase(),-1!=l.indexOf(s.toLowerCase())?n(null,!0):n(null,!1)},L=function(e,t){var s=new XMLHttpRequest;s.onreadystatechange=function(){if(4==s.readyState&&200==s.status){var n=JSON.parse(s.responseText);i(e,t,n,n.count/10,function(e,s){B(t)})}},s.open("GET","http://swapi.co/api/"+t+"/?format=json",!0),s.send()},x=[],B=function(e){x.push(e),1===x.length&&(v.status="Feeding Chewie...",v.render()),2===x.length&&(v.status="Spellchecking Yoda...",v.render()),3===x.length&&(v.status="Hugging Darth Vader...",v.render()),4===x.length&&(v.status="Kissing Princess Leia...",v.render()),5===x.length&&(v.status="Podracing with Anakin...",v.render()),6===x.length&&P()},P=function(){x.forEach(function(e,t){E(e,function(e,s){++t===x.length&&v.showSearch()})})},E=function(i,r){switch(i){case"people":e.forEach(function(t,s){V(t,function(t,n){++s===e.length&&r(null,e)})});break;case"films":t.forEach(function(e,s){D(e,function(e,n){++s===t.length&&r(null,t)})});break;case"starships":s.forEach(function(e,t){F(e,function(e,n){++t===s.length&&r(null,s)})});break;case"vehicles":n.forEach(function(e,t){T(e,function(e,s){++t===n.length&&r(null,n)})});break;case"species":l.forEach(function(e,t){N(e,function(e,s){++t===l.length&&r(null,l)})});break;case"planets":a.forEach(function(e,t){G(e,function(e,s){++t===a.length&&r(null,a)})})}},M=function(i,r,o,c){var p,u=i.get(r);switch(o){case e:p=new People;break;case t:p=new Films;break;case s:p=new Starships;break;case n:p=new Vehicles;break;case l:p=new Species;break;case a:p=new Planets}"string"==typeof u?C(u,o,function(e,t){e||(i.set(r,t),c(null,i))}):u.length>0?u.forEach(function(e,t){C(e,o,function(e,t){e||p.add(t),p.length===u.length&&(i.set(r,p),c(null,i))})}):c(null,i)},C=function(e,t,s){t.forEach(function(n,l){n.get("url")===e&&s(null,n),++l===t.length&&s(!0,null)})},V=function(e,i){M(e,"films",t,function(t,r){e=r,M(e,"species",l,function(t,l){e=l,M(e,"vehicles",n,function(t,n){e=n,M(e,"starships",s,function(t,s){e=s,M(e,"homeworld",a,function(t,s){e=s,i(null,e)})})})})})},D=function(t,i){M(t,"characters",e,function(e,r){t=r,M(t,"planets",a,function(e,a){t=a,M(t,"starships",s,function(e,s){t=s,M(t,"vehicles",n,function(e,s){t=s,M(t,"species",l,function(e,s){t=s,i(null,t)})})})})})},F=function(s,n){M(s,"pilots",e,function(e,l){s=l,M(s,"films",t,function(e,t){s=t,n(null,s)})})},T=function(s,n){M(s,"pilots",e,function(e,l){s=l,M(s,"films",t,function(e,t){s=t,n(null,s)})})},N=function(s,n){M(s,"people",e,function(e,l){s=l,M(s,"films",t,function(e,t){s=t,n(null,s)})})},G=function(s,n){M(s,"residents",e,function(e,l){s=l,M(s,"films",t,function(e,t){s=t,n(null,s)})})};L(e,"people"),L(t,"films"),L(s,"starships"),L(n,"vehicles"),L(l,"species"),L(a,"planets")}();
//# sourceMappingURL=data:application/json;base64,
